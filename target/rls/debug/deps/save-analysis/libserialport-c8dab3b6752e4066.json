{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1","program":"/home/jake/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","serialport","--edition=2018","/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"libudev\"","-C","metadata=c8dab3b6752e4066","-C","extra-filename=-c8dab3b6752e4066","--out-dir","/home/jake/AVTL/vectr/target/rls/debug/deps","-L","dependency=/home/jake/AVTL/vectr/target/rls/debug/deps","--extern","bitflags=/home/jake/AVTL/vectr/target/rls/debug/deps/libbitflags-4cfabfabd455f746.rmeta","--extern","cfg_if=/home/jake/AVTL/vectr/target/rls/debug/deps/libcfg_if-66978c2a0b8c4bd7.rmeta","--extern","libudev=/home/jake/AVTL/vectr/target/rls/debug/deps/liblibudev-6b7f672e0ffcba37.rmeta","--extern","nix=/home/jake/AVTL/vectr/target/rls/debug/deps/libnix-59ccd330ac60220c.rmeta","--cap-lints","allow","-L","native=/usr/lib","--error-format=json","--sysroot","/home/jake/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jake/AVTL/vectr/target/rls/debug/deps/libserialport-c8dab3b6752e4066.rmeta"},"prelude":{"crate_id":{"name":"serialport","disambiguator":[11335885348238246687,0]},"crate_root":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src","external_crates":[{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/enumerate.rs","num":20,"id":{"name":"cfg_if","disambiguator":[8416754029487691005,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/ioctl.rs","num":21,"id":{"name":"bitflags","disambiguator":[655250990778022342,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/ioctl.rs","num":22,"id":{"name":"nix","disambiguator":[13816839991083574178,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/ioctl.rs","num":23,"id":{"name":"void","disambiguator":[16289904723053266728,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/ioctl.rs","num":24,"id":{"name":"libc","disambiguator":[9823074174765762639,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/enumerate.rs","num":25,"id":{"name":"libudev","disambiguator":[1858597763482440414,0]}},{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/enumerate.rs","num":26,"id":{"name":"libudev_sys","disambiguator":[6107244373633931484,0]}}],"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":0,"byte_end":19481,"line_start":1,"line_end":584,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1492,"byte_end":1505,"line_start":38,"line_end":38,"column_start":17,"column_end":30},"alias_span":null,"name":"BreakDuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1507,"byte_end":1514,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"alias_span":null,"name":"TTYPort","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":0,"byte_end":19481,"line_start":1,"line_end":584,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":569},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":361},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":596},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":373},{"krate":0,"index":386},{"krate":0,"index":705},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":412},{"krate":0,"index":415}],"decl_id":null,"docs":" serialport-rs is a cross-platform serial port library.","sig":null,"attributes":[{"value":"/ serialport-rs is a cross-platform serial port library.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":0,"byte_end":58,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":59,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The goal of this library is to expose a cross-platform and platform-specific API for enumerating","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":63,"byte_end":163,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ and using blocking I/O with serial ports. This library exposes a similar API to that provided","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":164,"byte_end":261,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ by [Qt's `QSerialPort` library](https://doc.qt.io/qt-5/qserialport.html).","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":262,"byte_end":339,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":340,"byte_end":343,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Feature Overview","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":344,"byte_end":366,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":367,"byte_end":370,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The library has been organized such that there is a high-level `SerialPort` trait that provides","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":371,"byte_end":470,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ a cross-platform API for accessing serial ports. This is the preferred method of interacting","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":471,"byte_end":567,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ with ports and as such is part of the `prelude`. The `open*()` and `available_ports()` functions","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":568,"byte_end":668,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/ in the root provide cross-platform functionality.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":669,"byte_end":722,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":723,"byte_end":726,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ For platform-specific functionaly, this crate is split into a `posix` and `windows` API with","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":727,"byte_end":823,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ corresponding `TTYPort` and `COMPort` structs (that both implement the `SerialPort` trait).","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":824,"byte_end":919,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ Using the platform-specific `open*()` functions will return the platform-specific port object","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":920,"byte_end":1017,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ which allows access to platform-specific functionality.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1018,"byte_end":1077,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"deny(missing_docs, missing_debug_implementations,\n       missing_copy_implementations, unused)","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1079,"byte_end":1188,"line_start":19,"line_end":24,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57693,"byte_end":57700,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"TTYPort","qualname":"::posix::tty::TTYPort","value":"TTYPort {  }","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"decl_id":null,"docs":" A serial port implementation for POSIX TTY ports","sig":null,"attributes":[{"value":"/ A serial port implementation for POSIX TTY ports","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57365,"byte_end":57417,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57418,"byte_end":57421,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The port will be closed when the value is dropped. However, this struct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57422,"byte_end":57497,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ should not be instantiated directly by using `TTYPort::open()`, instead use","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57498,"byte_end":57577,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ the cross-platform `serialport::open()` or","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57578,"byte_end":57624,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/ `serialport::open_with_settings()`.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57625,"byte_end":57664,"line_start":39,"line_end":39,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58000,"byte_end":58005,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Short","qualname":"::posix::tty::BreakDuration::Short","value":"BreakDuration::Short","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" 0.25-0.5s\n","sig":null,"attributes":[{"value":"/ 0.25-0.5s","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57982,"byte_end":57995,"line_start":53,"line_end":53,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58073,"byte_end":58082,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"Arbitrary","qualname":"::posix::tty::BreakDuration::Arbitrary","value":"BreakDuration::Arbitrary(std::num::NonZeroI32)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Specifies a break duration that is platform-dependent\n","sig":null,"attributes":[{"value":"/ Specifies a break duration that is platform-dependent","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58011,"byte_end":58068,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":558},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57962,"byte_end":57975,"line_start":52,"line_end":52,"column_start":10,"column_end":23},"name":"BreakDuration","qualname":"::posix::tty::BreakDuration","value":"pub enum BreakDuration { Short, Arbitrary(std::num::NonZeroI32), }","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":561}],"decl_id":null,"docs":" Specifies the duration of a transmission break\n","sig":null,"attributes":[{"value":"/ Specifies the duration of a transmission break","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":57872,"byte_end":57922,"line_start":50,"line_end":50,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58697,"byte_end":58701,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"open","qualname":"<TTYPort>::open","value":"pub fn open(&SerialPortBuilder) -> Result<TTYPort>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TTY device as a serial port.","sig":null,"attributes":[{"value":"/ Opens a TTY device as a serial port.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58128,"byte_end":58168,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58173,"byte_end":58176,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ `path` should be the path to a TTY device, e.g., `/dev/ttyS0`.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58181,"byte_end":58247,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58252,"byte_end":58255,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Ports are opened in exclusive mode by default. If this is undesireable","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58260,"byte_end":58334,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ behavior, use `TTYPort::set_exclusive(false)`.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58339,"byte_end":58389,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58394,"byte_end":58397,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58402,"byte_end":58415,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58420,"byte_end":58423,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device could not be opened. This could indicate that","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58428,"byte_end":58504,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/    the device is already in use.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58509,"byte_end":58545,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/ * `InvalidInput` if `path` is not a valid device name.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58550,"byte_end":58608,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/ * `Io` for any other error while opening or initializing the device.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58613,"byte_end":58685,"line_start":72,"line_end":72,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62355,"byte_end":62364,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<TTYPort>::exclusive","value":"pub fn exclusive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the exclusivity of the port","sig":null,"attributes":[{"value":"/ Returns the exclusivity of the port","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62198,"byte_end":62237,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62242,"byte_end":62245,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ If a port is exclusive, then trying to open the same device path again","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62250,"byte_end":62324,"line_start":161,"line_end":161,"column_start":5,"column_end":79}},{"value":"/ will fail.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62329,"byte_end":62343,"line_start":162,"line_end":162,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62763,"byte_end":62776,"line_start":177,"line_end":177,"column_start":12,"column_end":25},"name":"set_exclusive","qualname":"<TTYPort>::set_exclusive","value":"pub fn set_exclusive(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the exclusivity of the port","sig":null,"attributes":[{"value":"/ Sets the exclusivity of the port","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62416,"byte_end":62452,"line_start":167,"line_end":167,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62457,"byte_end":62460,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a port is exclusive, then trying to open the same device path again","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62465,"byte_end":62539,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ will fail.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62544,"byte_end":62558,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62563,"byte_end":62566,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ See the man pages for the tiocexcl and tiocnxcl ioctl's for more details.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62571,"byte_end":62648,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62653,"byte_end":62656,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62661,"byte_end":62674,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62679,"byte_end":62682,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ * `Io` for any error while setting exclusivity for the port.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":62687,"byte_end":62751,"line_start":176,"line_end":176,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":64064,"byte_end":64068,"line_start":223,"line_end":223,"column_start":12,"column_end":16},"name":"pair","qualname":"<TTYPort>::pair","value":"pub fn pair() -> Result<(Self, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Create a pair of pseudo serial terminals","sig":null,"attributes":[{"value":"/ Create a pair of pseudo serial terminals","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63487,"byte_end":63531,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63536,"byte_end":63539,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ## Returns","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63544,"byte_end":63558,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ Two connected `TTYPort` objects: `(master, slave)`","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63563,"byte_end":63617,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63622,"byte_end":63625,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63630,"byte_end":63643,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ Attempting any IO or parameter settings on the slave tty after the master","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63648,"byte_end":63725,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ tty is closed will return errors.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63730,"byte_end":63767,"line_start":211,"line_end":211,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63772,"byte_end":63775,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ On some platforms manipulating the master port will fail and only","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63780,"byte_end":63849,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ modifying the slave port is possible.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63854,"byte_end":63895,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63900,"byte_end":63903,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63908,"byte_end":63923,"line_start":216,"line_end":216,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63928,"byte_end":63931,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63936,"byte_end":63943,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use serialport::TTYPort;","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63948,"byte_end":63976,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63981,"byte_end":63984,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let (master, slave) = TTYPort::pair().unwrap();","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":63989,"byte_end":64040,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":64045,"byte_end":64052,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":66748,"byte_end":66758,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"send_break","qualname":"<TTYPort>::send_break","value":"pub fn send_break(&Self, BreakDuration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends 0-valued bits over the port for a set duration\n","sig":null,"attributes":[{"value":"/ Sends 0-valued bits over the port for a set duration","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":66680,"byte_end":66736,"line_start":299,"line_end":299,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67863,"byte_end":67879,"line_start":322,"line_end":322,"column_start":12,"column_end":28},"name":"try_clone_native","qualname":"<TTYPort>::try_clone_native","value":"pub fn try_clone_native(&Self) -> Result<TTYPort>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the\n same serial connection. Please note that if you want a real asynchronous serial port you\n should look at [mio-serial](https://crates.io/crates/mio-serial) or\n [tokio-serial](https://crates.io/crates/tokio-serial).","sig":null,"attributes":[{"value":"/ Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67057,"byte_end":67153,"line_start":308,"line_end":308,"column_start":5,"column_end":101}},{"value":"/ same serial connection. Please note that if you want a real asynchronous serial port you","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67158,"byte_end":67250,"line_start":309,"line_end":309,"column_start":5,"column_end":97}},{"value":"/ should look at [mio-serial](https://crates.io/crates/mio-serial) or","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67255,"byte_end":67326,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ [tokio-serial](https://crates.io/crates/tokio-serial).","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67331,"byte_end":67389,"line_start":311,"line_end":311,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67394,"byte_end":67397,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Also, you must be very careful when changing the settings of a cloned `SerialPort` : since","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67402,"byte_end":67496,"line_start":313,"line_end":313,"column_start":5,"column_end":99}},{"value":"/ the settings are cached on a per object basis, trying to modify them from two different","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67501,"byte_end":67592,"line_start":314,"line_end":314,"column_start":5,"column_end":96}},{"value":"/ objects can cause some nasty behavior.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67597,"byte_end":67639,"line_start":315,"line_end":315,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67644,"byte_end":67647,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This is the same as `SerialPort::try_clone()` but returns the concrete type instead.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67652,"byte_end":67740,"line_start":317,"line_end":317,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67745,"byte_end":67748,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67753,"byte_end":67765,"line_start":319,"line_end":319,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67770,"byte_end":67773,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the serial port couldn't be cloned.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":67778,"byte_end":67851,"line_start":321,"line_end":321,"column_start":5,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":359},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1747,"byte_end":1753,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type for results generated by interacting with serial ports","sig":null,"attributes":[{"value":"/ A type for results generated by interacting with serial ports","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1590,"byte_end":1655,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1656,"byte_end":1659,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The `Err` type is hard-wired to [`serialport::Error`](struct.Error.html).","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":47,"line_end":47,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2216,"byte_end":2224,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"name":"NoDevice","qualname":"::ErrorKind::NoDevice","value":"ErrorKind::NoDevice","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" The device is not available.","sig":null,"attributes":[{"value":"/ The device is not available.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2048,"byte_end":2080,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2085,"byte_end":2088,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This could indicate that the device is in use by another process or was","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2093,"byte_end":2168,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ disconnected while performing I/O.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2173,"byte_end":2211,"line_start":59,"line_end":59,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2266,"byte_end":2278,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::ErrorKind::InvalidInput","value":"ErrorKind::InvalidInput","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" A parameter was incorrect.\n","sig":null,"attributes":[{"value":"/ A parameter was incorrect.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2231,"byte_end":2261,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2320,"byte_end":2327,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ErrorKind::Unknown","value":"ErrorKind::Unknown","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" An unknown error occurred.\n","sig":null,"attributes":[{"value":"/ An unknown error occurred.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2285,"byte_end":2315,"line_start":65,"line_end":65,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":576},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2447,"byte_end":2449,"line_start":71,"line_end":71,"column_start":5,"column_end":7},"name":"Io","qualname":"::ErrorKind::Io","value":"ErrorKind::Io(io::ErrorKind)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" An I/O error occurred.","sig":null,"attributes":[{"value":"/ An I/O error occurred.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2334,"byte_end":2360,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2365,"byte_end":2368,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The type of I/O error is determined by the inner `io::ErrorKind`.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2373,"byte_end":2442,"line_start":70,"line_end":70,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":569},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2032,"byte_end":2041,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ErrorKind","value":"pub enum ErrorKind { NoDevice, InvalidInput, Unknown, Io(io::ErrorKind), }","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576}],"decl_id":null,"docs":" Categories of errors that can occur when interacting with serial ports","sig":null,"attributes":[{"value":"/ Categories of errors that can occur when interacting with serial ports","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1791,"byte_end":1865,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1866,"byte_end":1869,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This list is intended to grow over time and it is not recommended to","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1870,"byte_end":1942,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/ exhaustively match against it.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":1943,"byte_end":1977,"line_start":53,"line_end":53,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2542,"byte_end":2547,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error { kind, description }","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"decl_id":null,"docs":" An error type for serial port operations\n","sig":null,"attributes":[{"value":"/ An error type for serial port operations","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2469,"byte_end":2513,"line_start":74,"line_end":74,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":592},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2592,"byte_end":2596,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"kind","qualname":"::Error::kind","value":"ErrorKind","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The kind of error this is\n","sig":null,"attributes":[{"value":"/ The kind of error this is","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2554,"byte_end":2583,"line_start":77,"line_end":77,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":593},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2675,"byte_end":2686,"line_start":80,"line_end":80,"column_start":9,"column_end":20},"name":"description","qualname":"::Error::description","value":"std::string::String","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" A description of the error suitable for end-users\n","sig":null,"attributes":[{"value":"/ A description of the error suitable for end-users","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2613,"byte_end":2666,"line_start":79,"line_end":79,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2756,"byte_end":2759,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<T: Into<String>>(ErrorKind, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new error\n","sig":null,"attributes":[{"value":"/ Instantiates a new error","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2716,"byte_end":2744,"line_start":84,"line_end":84,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2989,"byte_end":2993,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ErrorKind` for this error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ErrorKind` for this error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2920,"byte_end":2977,"line_start":92,"line_end":92,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4004,"byte_end":4008,"line_start":133,"line_end":133,"column_start":5,"column_end":9},"name":"Five","qualname":"::DataBits::Five","value":"DataBits::Five","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" 5 bits per character\n","sig":null,"attributes":[{"value":"/ 5 bits per character","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3975,"byte_end":3999,"line_start":132,"line_end":132,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":599},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4044,"byte_end":4047,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"Six","qualname":"::DataBits::Six","value":"DataBits::Six","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" 6 bits per character\n","sig":null,"attributes":[{"value":"/ 6 bits per character","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4015,"byte_end":4039,"line_start":135,"line_end":135,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4083,"byte_end":4088,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Seven","qualname":"::DataBits::Seven","value":"DataBits::Seven","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" 7 bits per character\n","sig":null,"attributes":[{"value":"/ 7 bits per character","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4054,"byte_end":4078,"line_start":138,"line_end":138,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4124,"byte_end":4129,"line_start":142,"line_end":142,"column_start":5,"column_end":10},"name":"Eight","qualname":"::DataBits::Eight","value":"DataBits::Eight","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" 8 bits per character\n","sig":null,"attributes":[{"value":"/ 8 bits per character","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4095,"byte_end":4119,"line_start":141,"line_end":141,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":596},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3960,"byte_end":3968,"line_start":131,"line_end":131,"column_start":10,"column_end":18},"name":"DataBits","qualname":"::DataBits","value":"pub enum DataBits { Five, Six, Seven, Eight, }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603}],"decl_id":null,"docs":" Number of bits per character\n","sig":null,"attributes":[{"value":"/ Number of bits per character","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3873,"byte_end":3905,"line_start":129,"line_end":129,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4641,"byte_end":4645,"line_start":157,"line_end":157,"column_start":5,"column_end":9},"name":"None","qualname":"::Parity::None","value":"Parity::None","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" No parity bit.\n","sig":null,"attributes":[{"value":"/ No parity bit.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4618,"byte_end":4636,"line_start":156,"line_end":156,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4698,"byte_end":4701,"line_start":160,"line_end":160,"column_start":5,"column_end":8},"name":"Odd","qualname":"::Parity::Odd","value":"Parity::Odd","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Parity bit sets odd number of 1 bits.\n","sig":null,"attributes":[{"value":"/ Parity bit sets odd number of 1 bits.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4652,"byte_end":4693,"line_start":159,"line_end":159,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4755,"byte_end":4759,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Even","qualname":"::Parity::Even","value":"Parity::Even","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Parity bit sets even number of 1 bits.\n","sig":null,"attributes":[{"value":"/ Parity bit sets even number of 1 bits.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4708,"byte_end":4750,"line_start":162,"line_end":162,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":616},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4605,"byte_end":4611,"line_start":155,"line_end":155,"column_start":10,"column_end":16},"name":"Parity","qualname":"::Parity","value":"pub enum Parity { None, Odd, Even, }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621}],"decl_id":null,"docs":" Parity checking modes","sig":null,"attributes":[{"value":"/ Parity checking modes","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4134,"byte_end":4159,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4160,"byte_end":4163,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When parity checking is enabled (`Odd` or `Even`) an extra bit is transmitted with","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4164,"byte_end":4250,"line_start":147,"line_end":147,"column_start":1,"column_end":87}},{"value":"/ each character. The value of the parity bit is arranged so that the number of 1 bits in the","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4251,"byte_end":4346,"line_start":148,"line_end":148,"column_start":1,"column_end":96}},{"value":"/ character (including the parity bit) is an even number (`Even`) or an odd number","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4347,"byte_end":4431,"line_start":149,"line_end":149,"column_start":1,"column_end":85}},{"value":"/ (`Odd`).","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4432,"byte_end":4444,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4445,"byte_end":4448,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Parity checking is disabled by setting `None`, in which case parity bits are not","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4449,"byte_end":4533,"line_start":152,"line_end":152,"column_start":1,"column_end":85}},{"value":"/ transmitted.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4534,"byte_end":4550,"line_start":153,"line_end":153,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4936,"byte_end":4939,"line_start":172,"line_end":172,"column_start":5,"column_end":8},"name":"One","qualname":"::StopBits::One","value":"StopBits::One","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" One stop bit.\n","sig":null,"attributes":[{"value":"/ One stop bit.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4914,"byte_end":4931,"line_start":171,"line_end":171,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":637},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4969,"byte_end":4972,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::StopBits::Two","value":"StopBits::Two","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Two stop bits.\n","sig":null,"attributes":[{"value":"/ Two stop bits.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4946,"byte_end":4964,"line_start":174,"line_end":174,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":634},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4899,"byte_end":4907,"line_start":170,"line_end":170,"column_start":10,"column_end":18},"name":"StopBits","qualname":"::StopBits","value":"pub enum StopBits { One, Two, }","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":637}],"decl_id":null,"docs":" Number of stop bits","sig":null,"attributes":[{"value":"/ Number of stop bits","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4764,"byte_end":4787,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4788,"byte_end":4791,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Stop bits are transmitted after every character.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4792,"byte_end":4844,"line_start":168,"line_end":168,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":651},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5097,"byte_end":5101,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"None","qualname":"::FlowControl::None","value":"FlowControl::None","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" No flow control.\n","sig":null,"attributes":[{"value":"/ No flow control.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5072,"byte_end":5092,"line_start":181,"line_end":181,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5151,"byte_end":5159,"line_start":185,"line_end":185,"column_start":5,"column_end":13},"name":"Software","qualname":"::FlowControl::Software","value":"FlowControl::Software","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Flow control using XON/XOFF bytes.\n","sig":null,"attributes":[{"value":"/ Flow control using XON/XOFF bytes.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5108,"byte_end":5146,"line_start":184,"line_end":184,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5210,"byte_end":5218,"line_start":188,"line_end":188,"column_start":5,"column_end":13},"name":"Hardware","qualname":"::FlowControl::Hardware","value":"FlowControl::Hardware","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Flow control using RTS/CTS signals.\n","sig":null,"attributes":[{"value":"/ Flow control using RTS/CTS signals.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5166,"byte_end":5205,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":650},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5054,"byte_end":5065,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"name":"FlowControl","qualname":"::FlowControl","value":"pub enum FlowControl { None, Software, Hardware, }","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655}],"decl_id":null,"docs":" Flow control modes\n","sig":null,"attributes":[{"value":"/ Flow control modes","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":4977,"byte_end":4999,"line_start":178,"line_end":178,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":669},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5473,"byte_end":5478,"line_start":197,"line_end":197,"column_start":5,"column_end":10},"name":"Input","qualname":"::ClearBuffer::Input","value":"ClearBuffer::Input","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Specify to clear data received but not read\n","sig":null,"attributes":[{"value":"/ Specify to clear data received but not read","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5421,"byte_end":5468,"line_start":196,"line_end":196,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5546,"byte_end":5552,"line_start":199,"line_end":199,"column_start":5,"column_end":11},"name":"Output","qualname":"::ClearBuffer::Output","value":"ClearBuffer::Output","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Specify to clear data written but not yet transmitted\n","sig":null,"attributes":[{"value":"/ Specify to clear data written but not yet transmitted","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5484,"byte_end":5541,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5631,"byte_end":5634,"line_start":201,"line_end":201,"column_start":5,"column_end":8},"name":"All","qualname":"::ClearBuffer::All","value":"ClearBuffer::All","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Specify to clear both data received and data not yet transmitted\n","sig":null,"attributes":[{"value":"/ Specify to clear both data received and data not yet transmitted","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5558,"byte_end":5626,"line_start":200,"line_end":200,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":668},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5403,"byte_end":5414,"line_start":195,"line_end":195,"column_start":10,"column_end":21},"name":"ClearBuffer","qualname":"::ClearBuffer","value":"pub enum ClearBuffer { Input, Output, All, }","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673}],"decl_id":null,"docs":" Specifies which buffer or buffers to purge when calling [`clear`]","sig":null,"attributes":[{"value":"/ Specifies which buffer or buffers to purge when calling [`clear`]","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5223,"byte_end":5292,"line_start":191,"line_end":191,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5293,"byte_end":5296,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`clear`]: trait.SerialPort.html#tymethod.clear","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5297,"byte_end":5348,"line_start":193,"line_end":193,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5738,"byte_end":5755,"line_start":206,"line_end":206,"column_start":12,"column_end":29},"name":"SerialPortBuilder","qualname":"::SerialPortBuilder","value":"SerialPortBuilder {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" A struct containing all serial port settings\n","sig":null,"attributes":[{"value":"/ A struct containing all serial port settings","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":5639,"byte_end":5687,"line_start":204,"line_end":204,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6409,"byte_end":6413,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"path","qualname":"<SerialPortBuilder>::path","value":"pub fn path<'a,\n            impl Into<std::borrow::Cow<'a, str>>: Into<std::borrow::Cow>>(Self,\n                                                                          impl Into<std::borrow::Cow<'a, str>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the path to the serial port\n","sig":null,"attributes":[{"value":"/ Set the path to the serial port","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6362,"byte_end":6397,"line_start":224,"line_end":224,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6614,"byte_end":6623,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"baud_rate","qualname":"<SerialPortBuilder>::baud_rate","value":"pub fn baud_rate(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the baud rate in symbols-per-second\n","sig":null,"attributes":[{"value":"/ Set the baud rate in symbols-per-second","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6559,"byte_end":6602,"line_start":230,"line_end":230,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6805,"byte_end":6814,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"data_bits","qualname":"<SerialPortBuilder>::data_bits","value":"pub fn data_bits(Self, DataBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the number of bits used to represent a character sent on the line\n","sig":null,"attributes":[{"value":"/ Set the number of bits used to represent a character sent on the line","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6720,"byte_end":6793,"line_start":236,"line_end":236,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6995,"byte_end":7007,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"flow_control","qualname":"<SerialPortBuilder>::flow_control","value":"pub fn flow_control(Self, FlowControl) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the type of signalling to use for controlling data transfer\n","sig":null,"attributes":[{"value":"/ Set the type of signalling to use for controlling data transfer","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6916,"byte_end":6983,"line_start":242,"line_end":242,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7185,"byte_end":7191,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"parity","qualname":"<SerialPortBuilder>::parity","value":"pub fn parity(Self, Parity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the type of parity to use for error checking\n","sig":null,"attributes":[{"value":"/ Set the type of parity to use for error checking","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7121,"byte_end":7173,"line_start":248,"line_end":248,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7360,"byte_end":7369,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"stop_bits","qualname":"<SerialPortBuilder>::stop_bits","value":"pub fn stop_bits(Self, StopBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the number of bits to use to signal the end of a character\n","sig":null,"attributes":[{"value":"/ Set the number of bits to use to signal the end of a character","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7282,"byte_end":7348,"line_start":254,"line_end":254,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7551,"byte_end":7558,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"timeout","qualname":"<SerialPortBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the amount of time to wait to receive data before timing out\n","sig":null,"attributes":[{"value":"/ Set the amount of time to wait to receive data before timing out","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7471,"byte_end":7539,"line_start":260,"line_end":260,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7741,"byte_end":7745,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"open","qualname":"<SerialPortBuilder>::open","value":"pub fn open(Self) -> Result<Box<dyn SerialPort>>","parent":null,"children":[],"decl_id":null,"docs":" Open a cross-platform interface to the port with the specified settings\n","sig":null,"attributes":[{"value":"/ Open a cross-platform interface to the port with the specified settings","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":7654,"byte_end":7729,"line_start":266,"line_end":266,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8286,"byte_end":8297,"line_start":283,"line_end":283,"column_start":12,"column_end":23},"name":"open_native","qualname":"<SerialPortBuilder>::open_native","value":"pub fn open_native(Self) -> Result<TTYPort>","parent":null,"children":[],"decl_id":null,"docs":" Open a platform-specific interface to the port with the specified settings\n","sig":null,"attributes":[{"value":"/ Open a platform-specific interface to the port with the specified settings","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8179,"byte_end":8257,"line_start":281,"line_end":281,"column_start":5,"column_end":83}},{"value":"cfg(unix)","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8262,"byte_end":8274,"line_start":282,"line_end":282,"column_start":5,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":386},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8719,"byte_end":8729,"line_start":298,"line_end":298,"column_start":11,"column_end":21},"name":"SerialPort","qualname":"::SerialPort","value":"SerialPort: Send + io::Read + io::Write","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A trait for serial port devices","sig":null,"attributes":[{"value":"/ A trait for serial port devices","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8568,"byte_end":8603,"line_start":294,"line_end":294,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8604,"byte_end":8607,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ This trait is all that's necessary to implement a new serial port driver","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8608,"byte_end":8684,"line_start":296,"line_end":296,"column_start":1,"column_end":77}},{"value":"/ for a new platform.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8685,"byte_end":8708,"line_start":297,"line_end":297,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8996,"byte_end":9000,"line_start":305,"line_end":305,"column_start":8,"column_end":12},"name":"name","qualname":"::SerialPort::name","value":"pub fn name(&Self) -> Option<String>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the name of this port if it exists.","sig":null,"attributes":[{"value":"/ Returns the name of this port if it exists.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8795,"byte_end":8842,"line_start":301,"line_end":301,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8847,"byte_end":8850,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This name may not be the canonical device name and instead be shorthand.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8855,"byte_end":8931,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ Additionally it may not exist for virtual ports.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8936,"byte_end":8988,"line_start":304,"line_end":304,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9290,"byte_end":9299,"line_start":312,"line_end":312,"column_start":8,"column_end":17},"name":"baud_rate","qualname":"::SerialPort::baud_rate","value":"pub fn baud_rate(&Self) -> Result<u32>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the current baud rate.","sig":null,"attributes":[{"value":"/ Returns the current baud rate.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9032,"byte_end":9066,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9071,"byte_end":9074,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This may return a value different from the last specified baud rate depending on the","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9079,"byte_end":9167,"line_start":309,"line_end":309,"column_start":5,"column_end":93}},{"value":"/ platform as some will return the actual device baud rate rather than the last specified","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9172,"byte_end":9263,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/ baud rate.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9268,"byte_end":9282,"line_start":311,"line_end":311,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9688,"byte_end":9697,"line_start":320,"line_end":320,"column_start":8,"column_end":17},"name":"data_bits","qualname":"::SerialPort::data_bits","value":"pub fn data_bits(&Self) -> Result<DataBits>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the character size.","sig":null,"attributes":[{"value":"/ Returns the character size.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9328,"byte_end":9359,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9364,"byte_end":9367,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the character size could not be determined. This may occur","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9372,"byte_end":9466,"line_start":316,"line_end":316,"column_start":5,"column_end":99}},{"value":"/ if the hardware is in an uninitialized state or is using a non-standard character size.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9471,"byte_end":9562,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ Setting a baud rate with `set_char_size()` should initialize the character size to a","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9567,"byte_end":9655,"line_start":318,"line_end":318,"column_start":5,"column_end":93}},{"value":"/ supported value.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9660,"byte_end":9680,"line_start":319,"line_end":319,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10114,"byte_end":10126,"line_start":328,"line_end":328,"column_start":8,"column_end":20},"name":"flow_control","qualname":"::SerialPort::flow_control","value":"pub fn flow_control(&Self) -> Result<FlowControl>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the flow control mode.","sig":null,"attributes":[{"value":"/ Returns the flow control mode.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9731,"byte_end":9765,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9770,"byte_end":9773,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the flow control mode could not be determined. This may","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9778,"byte_end":9869,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ occur if the hardware is in an uninitialized state or is using an unsupported flow control","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9874,"byte_end":9968,"line_start":325,"line_end":325,"column_start":5,"column_end":99}},{"value":"/ mode. Setting a flow control mode with `set_flow_control()` should initialize the flow","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":9973,"byte_end":10063,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ control mode to a supported value.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10068,"byte_end":10106,"line_start":327,"line_end":327,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10511,"byte_end":10517,"line_start":335,"line_end":335,"column_start":8,"column_end":14},"name":"parity","qualname":"::SerialPort::parity","value":"pub fn parity(&Self) -> Result<Parity>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the parity-checking mode.","sig":null,"attributes":[{"value":"/ Returns the parity-checking mode.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10163,"byte_end":10200,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10205,"byte_end":10208,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the parity mode could not be determined. This may occur if","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10213,"byte_end":10307,"line_start":332,"line_end":332,"column_start":5,"column_end":99}},{"value":"/ the hardware is in an uninitialized state or is using a non-standard parity mode. Setting","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10312,"byte_end":10405,"line_start":333,"line_end":333,"column_start":5,"column_end":98}},{"value":"/ a parity mode with `set_parity()` should initialize the parity mode to a supported value.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10410,"byte_end":10503,"line_start":334,"line_end":334,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10934,"byte_end":10943,"line_start":343,"line_end":343,"column_start":8,"column_end":17},"name":"stop_bits","qualname":"::SerialPort::stop_bits","value":"pub fn stop_bits(&Self) -> Result<StopBits>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the number of stop bits.","sig":null,"attributes":[{"value":"/ Returns the number of stop bits.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10549,"byte_end":10585,"line_start":337,"line_end":337,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10590,"byte_end":10593,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the number of stop bits could not be determined. This may","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10598,"byte_end":10691,"line_start":339,"line_end":339,"column_start":5,"column_end":98}},{"value":"/ occur if the hardware is in an uninitialized state or is using an unsupported stop bit","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10696,"byte_end":10786,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ configuration. Setting the number of stop bits with `set_stop-bits()` should initialize the","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10791,"byte_end":10886,"line_start":341,"line_end":341,"column_start":5,"column_end":100}},{"value":"/ stop bits to a supported value.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10891,"byte_end":10926,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11017,"byte_end":11024,"line_start":346,"line_end":346,"column_start":8,"column_end":15},"name":"timeout","qualname":"::SerialPort::timeout","value":"pub fn timeout(&Self) -> Duration","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the current timeout.\n","sig":null,"attributes":[{"value":"/ Returns the current timeout.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":10977,"byte_end":11009,"line_start":345,"line_end":345,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11391,"byte_end":11404,"line_start":357,"line_end":357,"column_start":8,"column_end":21},"name":"set_baud_rate","qualname":"::SerialPort::set_baud_rate","value":"pub fn set_baud_rate(&mut Self, u32) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the baud rate.","sig":null,"attributes":[{"value":"/ Sets the baud rate.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11080,"byte_end":11103,"line_start":350,"line_end":350,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11108,"byte_end":11111,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11116,"byte_end":11129,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11134,"byte_end":11137,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If the implementation does not support the requested baud rate, this function may return an","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11142,"byte_end":11237,"line_start":354,"line_end":354,"column_start":5,"column_end":100}},{"value":"/ `InvalidInput` error. Even if the baud rate is accepted by `set_baud_rate()`, it may not be","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11242,"byte_end":11337,"line_start":355,"line_end":355,"column_start":5,"column_end":100}},{"value":"/ supported by the underlying hardware.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11342,"byte_end":11383,"line_start":356,"line_end":356,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11488,"byte_end":11501,"line_start":360,"line_end":360,"column_start":8,"column_end":21},"name":"set_data_bits","qualname":"::SerialPort::set_data_bits","value":"pub fn set_data_bits(&mut Self, DataBits) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the character size.\n","sig":null,"attributes":[{"value":"/ Sets the character size.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11452,"byte_end":11480,"line_start":359,"line_end":359,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11593,"byte_end":11609,"line_start":363,"line_end":363,"column_start":8,"column_end":24},"name":"set_flow_control","qualname":"::SerialPort::set_flow_control","value":"pub fn set_flow_control(&mut Self, FlowControl) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the flow control mode.\n","sig":null,"attributes":[{"value":"/ Sets the flow control mode.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11554,"byte_end":11585,"line_start":362,"line_end":362,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11710,"byte_end":11720,"line_start":366,"line_end":366,"column_start":8,"column_end":18},"name":"set_parity","qualname":"::SerialPort::set_parity","value":"pub fn set_parity(&mut Self, Parity) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the parity-checking mode.\n","sig":null,"attributes":[{"value":"/ Sets the parity-checking mode.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11668,"byte_end":11702,"line_start":365,"line_end":365,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11809,"byte_end":11822,"line_start":369,"line_end":369,"column_start":8,"column_end":21},"name":"set_stop_bits","qualname":"::SerialPort::set_stop_bits","value":"pub fn set_stop_bits(&mut Self, StopBits) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the number of stop bits.\n","sig":null,"attributes":[{"value":"/ Sets the number of stop bits.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11768,"byte_end":11801,"line_start":368,"line_end":368,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11930,"byte_end":11941,"line_start":372,"line_end":372,"column_start":8,"column_end":19},"name":"set_timeout","qualname":"::SerialPort::set_timeout","value":"pub fn set_timeout(&mut Self, Duration) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the timeout for future I/O operations.\n","sig":null,"attributes":[{"value":"/ Sets the timeout for future I/O operations.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":11875,"byte_end":11922,"line_start":371,"line_end":371,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12505,"byte_end":12526,"line_start":387,"line_end":387,"column_start":8,"column_end":29},"name":"write_request_to_send","qualname":"::SerialPort::write_request_to_send","value":"pub fn write_request_to_send(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Sets the state of the RTS (Request To Send) control signal.","sig":null,"attributes":[{"value":"/ Sets the state of the RTS (Request To Send) control signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12051,"byte_end":12114,"line_start":376,"line_end":376,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12119,"byte_end":12122,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Setting a value of `true` asserts the RTS control signal. `false` clears the signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12127,"byte_end":12215,"line_start":378,"line_end":378,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12220,"byte_end":12223,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12228,"byte_end":12241,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12246,"byte_end":12249,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the RTS control signal could not be set to the desired","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12254,"byte_end":12346,"line_start":382,"line_end":382,"column_start":5,"column_end":97}},{"value":"/ state on the underlying hardware:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12351,"byte_end":12388,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12393,"byte_end":12396,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12401,"byte_end":12449,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12454,"byte_end":12497,"line_start":386,"line_end":386,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13003,"byte_end":13028,"line_start":400,"line_end":400,"column_start":8,"column_end":33},"name":"write_data_terminal_ready","qualname":"::SerialPort::write_data_terminal_ready","value":"pub fn write_data_terminal_ready(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Writes to the Data Terminal Ready pin","sig":null,"attributes":[{"value":"/ Writes to the Data Terminal Ready pin","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12571,"byte_end":12612,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12617,"byte_end":12620,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Setting a value of `true` asserts the DTR control signal. `false` clears the signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12625,"byte_end":12713,"line_start":391,"line_end":391,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12718,"byte_end":12721,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12726,"byte_end":12739,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12744,"byte_end":12747,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the DTR control signal could not be set to the desired","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12752,"byte_end":12844,"line_start":395,"line_end":395,"column_start":5,"column_end":97}},{"value":"/ state on the underlying hardware:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12849,"byte_end":12886,"line_start":396,"line_end":396,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12891,"byte_end":12894,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12899,"byte_end":12947,"line_start":398,"line_end":398,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":12952,"byte_end":12995,"line_start":399,"line_end":399,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13573,"byte_end":13591,"line_start":415,"line_end":415,"column_start":8,"column_end":26},"name":"read_clear_to_send","qualname":"::SerialPort::read_clear_to_send","value":"pub fn read_clear_to_send(&mut Self) -> Result<bool>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Reads the state of the CTS (Clear To Send) control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the CTS (Clear To Send) control signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13119,"byte_end":13181,"line_start":404,"line_end":404,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13186,"byte_end":13189,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the CTS control signal is asserted.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13194,"byte_end":13288,"line_start":406,"line_end":406,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13293,"byte_end":13296,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13301,"byte_end":13314,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13319,"byte_end":13322,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the CTS control signal could not be read","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13327,"byte_end":13418,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ from the underlying hardware:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13423,"byte_end":13456,"line_start":411,"line_end":411,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13461,"byte_end":13464,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13469,"byte_end":13517,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13522,"byte_end":13565,"line_start":414,"line_end":414,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14074,"byte_end":14093,"line_start":428,"line_end":428,"column_start":8,"column_end":27},"name":"read_data_set_ready","qualname":"::SerialPort::read_data_set_ready","value":"pub fn read_data_set_ready(&mut Self) -> Result<bool>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Reads the state of the Data Set Ready control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the Data Set Ready control signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13625,"byte_end":13682,"line_start":417,"line_end":417,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13687,"byte_end":13690,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the DSR control signal is asserted.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13695,"byte_end":13789,"line_start":419,"line_end":419,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13794,"byte_end":13797,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13802,"byte_end":13815,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13820,"byte_end":13823,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the DSR control signal could not be read","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13828,"byte_end":13919,"line_start":423,"line_end":423,"column_start":5,"column_end":96}},{"value":"/ from the underlying hardware:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13924,"byte_end":13957,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13962,"byte_end":13965,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":13970,"byte_end":14018,"line_start":426,"line_end":426,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14023,"byte_end":14066,"line_start":427,"line_end":427,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14574,"byte_end":14593,"line_start":441,"line_end":441,"column_start":8,"column_end":27},"name":"read_ring_indicator","qualname":"::SerialPort::read_ring_indicator","value":"pub fn read_ring_indicator(&mut Self) -> Result<bool>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Reads the state of the Ring Indicator control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the Ring Indicator control signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14127,"byte_end":14184,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14189,"byte_end":14192,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the RI control signal is asserted.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14197,"byte_end":14290,"line_start":432,"line_end":432,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14295,"byte_end":14298,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14303,"byte_end":14316,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14321,"byte_end":14324,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the RI control signal could not be read from","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14329,"byte_end":14424,"line_start":436,"line_end":436,"column_start":5,"column_end":100}},{"value":"/ the underlying hardware:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14429,"byte_end":14457,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14462,"byte_end":14465,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14470,"byte_end":14518,"line_start":439,"line_end":439,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14523,"byte_end":14566,"line_start":440,"line_end":440,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15074,"byte_end":15093,"line_start":454,"line_end":454,"column_start":8,"column_end":27},"name":"read_carrier_detect","qualname":"::SerialPort::read_carrier_detect","value":"pub fn read_carrier_detect(&mut Self) -> Result<bool>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Reads the state of the Carrier Detect control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the Carrier Detect control signal.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14627,"byte_end":14684,"line_start":443,"line_end":443,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14689,"byte_end":14692,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the CD control signal is asserted.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14697,"byte_end":14790,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14795,"byte_end":14798,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14803,"byte_end":14816,"line_start":447,"line_end":447,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14821,"byte_end":14824,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the CD control signal could not be read from","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14829,"byte_end":14924,"line_start":449,"line_end":449,"column_start":5,"column_end":100}},{"value":"/ the underlying hardware:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14929,"byte_end":14957,"line_start":450,"line_end":450,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14962,"byte_end":14965,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":14970,"byte_end":15018,"line_start":452,"line_end":452,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15023,"byte_end":15066,"line_start":453,"line_end":453,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15404,"byte_end":15417,"line_start":464,"line_end":464,"column_start":8,"column_end":21},"name":"bytes_to_read","qualname":"::SerialPort::bytes_to_read","value":"pub fn bytes_to_read(&Self) -> Result<u32>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Gets the number of bytes available to be read from the input buffer.","sig":null,"attributes":[{"value":"/ Gets the number of bytes available to be read from the input buffer.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15127,"byte_end":15199,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15204,"byte_end":15207,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15212,"byte_end":15224,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15229,"byte_end":15232,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This function may return the following errors:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15237,"byte_end":15287,"line_start":460,"line_end":460,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15292,"byte_end":15295,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15300,"byte_end":15348,"line_start":462,"line_end":462,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15353,"byte_end":15396,"line_start":463,"line_end":463,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15731,"byte_end":15745,"line_start":474,"line_end":474,"column_start":8,"column_end":22},"name":"bytes_to_write","qualname":"::SerialPort::bytes_to_write","value":"pub fn bytes_to_write(&Self) -> Result<u32>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Get the number of bytes written to the output buffer, awaiting transmission.","sig":null,"attributes":[{"value":"/ Get the number of bytes written to the output buffer, awaiting transmission.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15446,"byte_end":15526,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15531,"byte_end":15534,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15539,"byte_end":15551,"line_start":468,"line_end":468,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15556,"byte_end":15559,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This function may return the following errors:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15564,"byte_end":15614,"line_start":470,"line_end":470,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15619,"byte_end":15622,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15627,"byte_end":15675,"line_start":472,"line_end":472,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15680,"byte_end":15723,"line_start":473,"line_end":473,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16061,"byte_end":16066,"line_start":484,"line_end":484,"column_start":8,"column_end":13},"name":"clear","qualname":"::SerialPort::clear","value":"pub fn clear(&Self, ClearBuffer) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Discards all bytes from the serial driver's input buffer and/or output buffer.","sig":null,"attributes":[{"value":"/ Discards all bytes from the serial driver's input buffer and/or output buffer.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15774,"byte_end":15856,"line_start":476,"line_end":476,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15861,"byte_end":15864,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15869,"byte_end":15881,"line_start":478,"line_end":478,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15886,"byte_end":15889,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This function may return the following errors:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15894,"byte_end":15944,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15949,"byte_end":15952,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":15957,"byte_end":16005,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16010,"byte_end":16053,"line_start":483,"line_end":483,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16847,"byte_end":16856,"line_start":500,"line_end":500,"column_start":8,"column_end":17},"name":"try_clone","qualname":"::SerialPort::try_clone","value":"pub fn try_clone(&Self) -> Result<Box<dyn SerialPort>>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the\n same serial connection. Please note that if you want a real asynchronous serial port you\n should look at [mio-serial](https://crates.io/crates/mio-serial) or\n [tokio-serial](https://crates.io/crates/tokio-serial).","sig":null,"attributes":[{"value":"/ Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16145,"byte_end":16241,"line_start":488,"line_end":488,"column_start":5,"column_end":101}},{"value":"/ same serial connection. Please note that if you want a real asynchronous serial port you","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16246,"byte_end":16338,"line_start":489,"line_end":489,"column_start":5,"column_end":97}},{"value":"/ should look at [mio-serial](https://crates.io/crates/mio-serial) or","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16343,"byte_end":16414,"line_start":490,"line_end":490,"column_start":5,"column_end":76}},{"value":"/ [tokio-serial](https://crates.io/crates/tokio-serial).","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16419,"byte_end":16477,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16482,"byte_end":16485,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Also, you must be very carefull when changing the settings of a cloned `SerialPort` : since","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16490,"byte_end":16585,"line_start":493,"line_end":493,"column_start":5,"column_end":100}},{"value":"/ the settings are cached on a per object basis, trying to modify them from two different","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16590,"byte_end":16681,"line_start":494,"line_end":494,"column_start":5,"column_end":96}},{"value":"/ objects can cause some nasty behavior.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16686,"byte_end":16728,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16733,"byte_end":16736,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16741,"byte_end":16753,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16758,"byte_end":16761,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the serial port couldn't be cloned.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16766,"byte_end":16839,"line_start":499,"line_end":499,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16939,"byte_end":16948,"line_start":503,"line_end":503,"column_start":8,"column_end":17},"name":"set_break","qualname":"::SerialPort::set_break","value":"pub fn set_break(&Self) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Start transmitting a break\n","sig":null,"attributes":[{"value":"/ Start transmitting a break","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16901,"byte_end":16931,"line_start":502,"line_end":502,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17013,"byte_end":17024,"line_start":506,"line_end":506,"column_start":8,"column_end":19},"name":"clear_break","qualname":"::SerialPort::clear_break","value":"pub fn clear_break(&Self) -> Result<()>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Stop transmitting a break\n","sig":null,"attributes":[{"value":"/ Stop transmitting a break","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":16976,"byte_end":17005,"line_start":505,"line_end":505,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17163,"byte_end":17174,"line_start":511,"line_end":511,"column_start":12,"column_end":23},"name":"UsbPortInfo","qualname":"::UsbPortInfo","value":"UsbPortInfo { vid, pid, serial_number, manufacturer, product }","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"decl_id":null,"docs":" Contains all possible USB information about a `SerialPort`\n","sig":null,"attributes":[{"value":"/ Contains all possible USB information about a `SerialPort`","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17050,"byte_end":17112,"line_start":509,"line_end":509,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17203,"byte_end":17206,"line_start":513,"line_end":513,"column_start":9,"column_end":12},"name":"vid","qualname":"::UsbPortInfo::vid","value":"u16","parent":{"krate":0,"index":705},"children":[],"decl_id":null,"docs":" Vendor ID\n","sig":null,"attributes":[{"value":"/ Vendor ID","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17181,"byte_end":17194,"line_start":512,"line_end":512,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":707},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17240,"byte_end":17243,"line_start":515,"line_end":515,"column_start":9,"column_end":12},"name":"pid","qualname":"::UsbPortInfo::pid","value":"u16","parent":{"krate":0,"index":705},"children":[],"decl_id":null,"docs":" Product ID\n","sig":null,"attributes":[{"value":"/ Product ID","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17217,"byte_end":17231,"line_start":514,"line_end":514,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":708},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17299,"byte_end":17312,"line_start":517,"line_end":517,"column_start":9,"column_end":22},"name":"serial_number","qualname":"::UsbPortInfo::serial_number","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":705},"children":[],"decl_id":null,"docs":" Serial number (arbitrary string)\n","sig":null,"attributes":[{"value":"/ Serial number (arbitrary string)","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17254,"byte_end":17290,"line_start":516,"line_end":516,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17378,"byte_end":17390,"line_start":519,"line_end":519,"column_start":9,"column_end":21},"name":"manufacturer","qualname":"::UsbPortInfo::manufacturer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":705},"children":[],"decl_id":null,"docs":" Manufacturer (arbitrary string)\n","sig":null,"attributes":[{"value":"/ Manufacturer (arbitrary string)","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17334,"byte_end":17369,"line_start":518,"line_end":518,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17456,"byte_end":17463,"line_start":521,"line_end":521,"column_start":9,"column_end":16},"name":"product","qualname":"::UsbPortInfo::product","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":705},"children":[],"decl_id":null,"docs":" Product name (arbitrary string)\n","sig":null,"attributes":[{"value":"/ Product name (arbitrary string)","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17412,"byte_end":17447,"line_start":520,"line_end":520,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":723},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17638,"byte_end":17645,"line_start":528,"line_end":528,"column_start":5,"column_end":12},"name":"UsbPort","qualname":"::SerialPortType::UsbPort","value":"SerialPortType::UsbPort(UsbPortInfo)","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" The serial port is connected via USB\n","sig":null,"attributes":[{"value":"/ The serial port is connected via USB","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17593,"byte_end":17633,"line_start":527,"line_end":527,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":726},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17726,"byte_end":17733,"line_start":530,"line_end":530,"column_start":5,"column_end":12},"name":"PciPort","qualname":"::SerialPortType::PciPort","value":"SerialPortType::PciPort","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" The serial port is connected via PCI (permanent port)\n","sig":null,"attributes":[{"value":"/ The serial port is connected via PCI (permanent port)","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17664,"byte_end":17721,"line_start":529,"line_end":529,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":728},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17790,"byte_end":17803,"line_start":532,"line_end":532,"column_start":5,"column_end":18},"name":"BluetoothPort","qualname":"::SerialPortType::BluetoothPort","value":"SerialPortType::BluetoothPort","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" The serial port is connected via Bluetooth\n","sig":null,"attributes":[{"value":"/ The serial port is connected via Bluetooth","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17739,"byte_end":17785,"line_start":531,"line_end":531,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17873,"byte_end":17880,"line_start":534,"line_end":534,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::SerialPortType::Unknown","value":"SerialPortType::Unknown","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" It can't be determined how the serial port is connected\n","sig":null,"attributes":[{"value":"/ It can't be determined how the serial port is connected","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17809,"byte_end":17868,"line_start":533,"line_end":533,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":722},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17572,"byte_end":17586,"line_start":526,"line_end":526,"column_start":10,"column_end":24},"name":"SerialPortType","qualname":"::SerialPortType","value":"pub enum SerialPortType {\n    UsbPort(UsbPortInfo),\n    PciPort,\n    BluetoothPort,\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730}],"decl_id":null,"docs":" The physical type of a `SerialPort`\n","sig":null,"attributes":[{"value":"/ The physical type of a `SerialPort`","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17484,"byte_end":17523,"line_start":524,"line_end":524,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18002,"byte_end":18016,"line_start":539,"line_end":539,"column_start":12,"column_end":26},"name":"SerialPortInfo","qualname":"::SerialPortInfo","value":"SerialPortInfo { port_name, port_type }","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" A device-independent implementation of serial port information\n","sig":null,"attributes":[{"value":"/ A device-independent implementation of serial port information","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":17885,"byte_end":17951,"line_start":537,"line_end":537,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":744},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18069,"byte_end":18078,"line_start":541,"line_end":541,"column_start":9,"column_end":18},"name":"port_name","qualname":"::SerialPortInfo::port_name","value":"std::string::String","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" The short name of the serial port\n","sig":null,"attributes":[{"value":"/ The short name of the serial port","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18023,"byte_end":18060,"line_start":540,"line_end":540,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":745},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18152,"byte_end":18161,"line_start":543,"line_end":543,"column_start":9,"column_end":18},"name":"port_type","qualname":"::SerialPortInfo::port_type","value":"SerialPortType","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" The hardware device type that exposes this port\n","sig":null,"attributes":[{"value":"/ The hardware device type that exposes this port","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18092,"byte_end":18143,"line_start":542,"line_end":542,"column_start":5,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18612,"byte_end":18615,"line_start":556,"line_end":556,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"pub fn new<'a,\n           impl Into<std::borrow::Cow<'a, str>>: Into<std::borrow::Cow>>(impl Into<std::borrow::Cow<'a, str>>,\n                                                                         u32)\n-> SerialPortBuilder","parent":null,"children":[],"decl_id":null,"docs":" Construct a builder of `SerialPort` objects","sig":null,"attributes":[{"value":"/ Construct a builder of `SerialPort` objects","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18182,"byte_end":18229,"line_start":546,"line_end":546,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18230,"byte_end":18233,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ `SerialPort` objects are built using the Builder pattern through the `new` function. The","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18234,"byte_end":18326,"line_start":548,"line_end":548,"column_start":1,"column_end":93}},{"value":"/ resultant `SerialPortBuilder` object can be copied, reconfigured, and saved making working with","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18327,"byte_end":18426,"line_start":549,"line_end":549,"column_start":1,"column_end":100}},{"value":"/ multiple serial ports a little easier.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18427,"byte_end":18469,"line_start":550,"line_end":550,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18470,"byte_end":18473,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ To open a new serial port:","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18474,"byte_end":18504,"line_start":552,"line_end":552,"column_start":1,"column_end":31}},{"value":"/ ```fail","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18505,"byte_end":18516,"line_start":553,"line_end":553,"column_start":1,"column_end":12}},{"value":"/ serialport::new(\"/dev/ttyUSB0\", 9600).open().expect(\"Failed to open port\");","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18517,"byte_end":18596,"line_start":554,"line_end":554,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18597,"byte_end":18604,"line_start":555,"line_end":555,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":19151,"byte_end":19166,"line_start":572,"line_end":572,"column_start":8,"column_end":23},"name":"available_ports","qualname":"::available_ports","value":"pub fn available_ports() -> Result<Vec<SerialPortInfo>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of all serial ports on system","sig":null,"attributes":[{"value":"/ Returns a list of all serial ports on system","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":18979,"byte_end":19027,"line_start":568,"line_end":568,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":19028,"byte_end":19031,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ It is not guaranteed that these ports exist or are available even if they're","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":19032,"byte_end":19112,"line_start":570,"line_end":570,"column_start":1,"column_end":81}},{"value":"/ returned by this function.","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":19113,"byte_end":19143,"line_start":571,"line_end":571,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/error.rs","byte_start":37768,"byte_end":37773,"line_start":6,"line_end":6,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/error.rs","byte_start":38211,"byte_end":38216,"line_start":17,"line_end":17,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58114,"byte_end":58121,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":68290,"byte_end":68297,"line_start":335,"line_end":335,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":68375,"byte_end":68382,"line_start":341,"line_end":341,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":68464,"byte_end":68471,"line_start":347,"line_end":347,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":69317,"byte_end":69324,"line_start":369,"line_end":369,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":70110,"byte_end":70117,"line_start":387,"line_end":387,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":70438,"byte_end":70445,"line_start":397,"line_end":397,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":70940,"byte_end":70947,"line_start":412,"line_end":412,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2704,"byte_end":2709,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3065,"byte_end":3070,"line_start":98,"line_end":98,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3226,"byte_end":3231,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3330,"byte_end":3335,"line_start":110,"line_end":110,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3492,"byte_end":3497,"line_start":116,"line_end":116,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6338,"byte_end":6355,"line_start":223,"line_end":223,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/error.rs","byte_start":37768,"byte_end":37773,"line_start":6,"line_end":6,"column_start":31,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/error.rs","byte_start":38211,"byte_end":38216,"line_start":17,"line_end":17,"column_start":27,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":58114,"byte_end":58121,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":68290,"byte_end":68297,"line_start":335,"line_end":335,"column_start":15,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":68375,"byte_end":68382,"line_start":341,"line_end":341,"column_start":18,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":6566}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":68464,"byte_end":68471,"line_start":347,"line_end":347,"column_start":20,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":6570}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":69317,"byte_end":69324,"line_start":369,"line_end":369,"column_start":20,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":6568}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":70110,"byte_end":70117,"line_start":387,"line_end":387,"column_start":19,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":4334}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":70438,"byte_end":70445,"line_start":397,"line_end":397,"column_start":20,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":4395}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/posix/tty.rs","byte_start":70940,"byte_end":70947,"line_start":412,"line_end":412,"column_start":21,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":386}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":2704,"byte_end":2709,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3065,"byte_end":3070,"line_start":98,"line_end":98,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3226,"byte_end":3231,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":591},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3330,"byte_end":3335,"line_start":110,"line_end":110,"column_start":26,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":3492,"byte_end":3497,"line_start":116,"line_end":116,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":6338,"byte_end":6355,"line_start":223,"line_end":223,"column_start":6,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8731,"byte_end":8735,"line_start":298,"line_end":298,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":386}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8742,"byte_end":8746,"line_start":298,"line_end":298,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":4334},"to":{"krate":0,"index":386}},{"span":{"file_name":"/home/jake/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.0.1/src/lib.rs","byte_start":8753,"byte_end":8758,"line_start":298,"line_end":298,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":4395},"to":{"krate":0,"index":386}}]}